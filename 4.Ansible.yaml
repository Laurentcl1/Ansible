# Créez une arborescence de base :
mkdir -p ansible-project/{inventories,playbooks,roles}
cd ansible-project

# Fichier : inventories/hosts.ini

[amazon_nodes]
52.47.140.223 # db
15.236.38.0 # wikimedia

[amazon_nodes:vars]
ansible_user=ec2-user
ansible_ssh_private_key_file=~/.ssh/your-ec2-key.pem
ansible_ssh_common_args='-o StrictHostKeyChecking=no'


# Générer une clé SSH pour l’utilisateur Ansible
ssh-keygen -t rsa -b 2048 -f ansible-user-key

# Créer le playbook pour configurer le user

---
- name: Setup ansible-user with sudo access
  hosts: amazon_nodes
  become: true

  vars:
    ansible_username: ansible-user
    ssh_public_key: "{{ lookup('file', 'ansible-user-key.pub') }}"

  tasks:
    - name: Create ansible user
      user:
        name: "{{ ansible_username }}"
        groups: wheel
        append: yes
        shell: /bin/bash
        create_home: yes

    - name: Create .ssh directory
      file:
        path: "/home/{{ ansible_username }}/.ssh"
        state: directory
        owner: "{{ ansible_username }}"
        group: "{{ ansible_username }}"
        mode: 0700

    - name: Add authorized key
      copy:
        content: "{{ ssh_public_key }}"
        dest: "/home/{{ ansible_username }}/.ssh/authorized_keys"
        owner: "{{ ansible_username }}"
        group: "{{ ansible_username }}"
        mode: 0600

# Lancer le playbook
ansible-playbook -i inventories/hosts.ini playbooks/create_ansible_user.yml

# Tester la connexion avec le nouvel utilisateur
ssh -i ansible-user-key ansible-user@52.47.140.223
